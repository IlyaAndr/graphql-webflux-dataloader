type Customer {
  id: ID!
  firstName: String!
  lastName: String!
  company: Company!
  outOfOfficeDelegate: Customer
  pricingDetails: PricingDetails
}

type Company {
  id: ID!
  name: String!
  address: String!
  primaryContact: Customer
  pricingDetails: PricingDetails
}

type CompanyPartnership {
  id: ID!
  companyA: Company!
  companyB: Company!
}

type PricingDetails {
  vatRateValue: Float!
  discountRateValue: Float!
  preferredPaymentMethodDescription: String!
}

type Product {
  id: ID!
  description: String!
  price: Float!
  company: Company!
  orderCount: Int!
}

type Query {
  customers: [Customer]
  customersByIds(ids: [Int]!): [Customer]
  companies: [Company]
  companyPartnerships: [CompanyPartnership]
  products: [Product]
  topSellingProducts(count: Int!): [Product]
}

type Mutation {
   createTestData: String
}

schema {
  query: Query
  mutation: Mutation
}
